{"version":3,"sources":["components/Menu/Menu.js","components/Blackout/Blackout.js","components/Hamburger/Hamburger.js","components/Header/Header.js","components/CardInput/CardInput.js","components/Registration/Registration.js","components/ClientList/ClientList.js","components/AboutMe/AboutMe.js","components/App/App.js","index.js"],"names":["Menu","targetRef","React","createRef","duration","props","defaultStyle","transition","opacity","transitionStyles","entering","marginLeft","entered","exiting","exited","Portal","ClickAwayListener","onClickAway","this","handleClose","Transition","in","open","timeout","mountOnEnter","unmountOnExit","onEntering","disableBodyScroll","current","onExiting","enableBodyScroll","state","className","ref","style","to","onClick","Component","Blackout","Hamburger","handleMenuButtonClick","setState","prevState","Header","CardInput","mask","maskChar","validateCardNumber","number","RegExp","test","luhnCheck","val","sum","i","length","intVal","parseInt","substr","initState","user","userName","userGender","userCreditCard","withLoyaltyProgram","userCoupon","timeStamp","errors","validated","Registration","showSuccessMessage","inputTransitionDuration","inputDefaultStyle","inputTransitionStyles","height","marginBottom","handleChange","e","target","value","type","checked","name","validateField","isValid","errorMessage","match","includes","replace","clearError","handleSubmit","isFormValid","Date","addUser","handleMessageClose","event","reason","console","log","TextField","onFocus","onChange","onBlur","label","variant","error","helperText","FormControl","InputLabel","id","Select","labelId","MenuItem","FormHelperText","InputProps","inputComponent","FormControlLabel","control","Switch","labelPlacement","Button","Snackbar","onClose","message","Alert","severity","elevation","dateOptions","year","month","day","timezone","hour","minute","second","ClientList","users","map","toLocaleString","toString","src","alt","AboutMe","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2917a86.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport {Transition} from \"react-transition-group\";\nimport {disableBodyScroll, enableBodyScroll} from \"body-scroll-lock\";\nimport Portal from \"@material-ui/core/Portal\";\nimport { NavLink } from \"react-router-dom\";\n\nimport './Menu.scss';\n\nclass Menu extends Component {\n    targetRef = React.createRef();\n\n\n    duration = this.props.duration || 300;\n\n    defaultStyle = {\n        transition: `all ${this.duration}ms ease-in-out`,\n        opacity: 0,\n    }\n\n    transitionStyles = {\n        entering: { opacity: 0, marginLeft: -360 },\n        entered:  { opacity: 1, marginLeft: 0 },\n        exiting:  { opacity: 0, marginLeft: -360 },\n        exited:   { opacity: 1, marginLeft: 0 }\n    };\n\n    render() {\n        return(\n            <Portal>\n                <ClickAwayListener onClickAway={this.props.handleClose}>\n                    <Transition\n                        in={this.props.open}\n                        timeout={this.duration}\n                        mountOnEnter={true}\n                        unmountOnExit={true}\n                        onEntering={() => disableBodyScroll(this.targetRef.current)}\n                        onExiting={() => enableBodyScroll(this.targetRef.current)}\n                    >\n                        {state => (\n                            <div\n                                className=\"Menu\"\n                                ref={this.targetRef}\n                                style={{\n                                    ...this.defaultStyle,\n                                    ...this.transitionStyles[state]\n                                }}\n                            >\n                                <nav className=\"Menu-Navigation\">\n                                    <ul className=\"Menu-NavList\">\n                                        <li className=\"Menu-NavItem\">\n                                            <NavLink to=\"/add-user\" className=\"Menu-NavLink\" onClick={this.props.handleClose}>Registration</NavLink>\n                                        </li>\n                                        <li className=\"Menu-NavItem\">\n                                            <NavLink to=\"/user-list\" className=\"Menu-NavLink\" onClick={this.props.handleClose}>Users list</NavLink>\n                                        </li>\n                                        <li className=\"Menu-NavItem\">\n                                            <NavLink to=\"/about-me\" className=\"Menu-NavLink\" onClick={this.props.handleClose}>About author</NavLink>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        )}\n                    </Transition>\n                </ClickAwayListener>\n            </Portal>\n        )\n    }\n}\n\nexport default Menu;","import React, {Component} from \"react\";\nimport {Transition} from \"react-transition-group\";\nimport Portal from \"@material-ui/core/Portal\";\n\nimport './Blackout.scss'\n\nclass Blackout extends Component {\n    duration = this.props.duration || 300;\n\n    defaultStyle = {\n        transition: `all ${this.duration}ms ease-in-out`,\n        opacity: 0,\n    }\n\n    transitionStyles = {\n        entering: { opacity: 0 },\n        entered:  { opacity: 0.5 },\n        exiting:  { opacity: 0 },\n        exited:   { opacity: 0.5 }\n    };\n\n    render() {\n        return(\n            <Portal>\n                <Transition\n                    in={this.props.open}\n                    timeout={this.duration}\n                    mountOnEnter={true}\n                    unmountOnExit={true}\n                >\n                    {state => (\n                        <div\n                            className=\"Blackout\"\n                            ref={this.targetRef}\n                            style={{\n                                ...this.defaultStyle,\n                                ...this.transitionStyles[state]\n                            }}\n                        />\n                    )}\n                </Transition>\n            </Portal>\n        )\n    }\n}\n\nexport default Blackout;","import React, { Component, Fragment } from \"react\";\n\nimport Menu from '../Menu/Menu'\nimport Blackout from \"../Blackout/Blackout\";\n\nimport './Hamburger.scss'\n\nclass Hamburger extends Component {\n    state = {\n        open: false,\n    }\n\n    handleMenuButtonClick = () => {\n        this.setState((prevState) => ({open: !prevState.open}));\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"Hamburger\">\n                    <button\n                        className={`Hamburger-Button ${this.state.open ? \"Hamburger-Button_open\" : \"\"}`}\n                        onClick={this.handleMenuButtonClick}\n                    >\n                        <span />\n                        <span />\n                        <span />\n                    </button>\n                </div>\n\n                <Menu open={this.state.open} handleClose={this.handleClose} duration={300} />\n                <Blackout open={this.state.open} duration={300} />\n            </Fragment>\n        );\n    }\n};\n\nexport default Hamburger;","import React from \"react\";\nimport Hamburger from \"../Hamburger/Hamburger\";\n\nimport './Header.scss'\n\nconst Header = () => {\n    return (\n        <div className=\"Header\">\n            <div className=\"Header-Wrapper\">\n                <Hamburger/>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport InputMask from 'react-input-mask';\n\nclass CardInput extends React.Component {\n    render() {\n        return <InputMask {...this.props} mask=\"9999 9999 9999 9999\" maskChar=\" \" />;\n    }\n}\n\nexport default CardInput;","import React, { Component } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport CardInput from '../CardInput/CardInput'\nimport {Transition} from \"react-transition-group\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport './Registration.scss';\n\nconst validateCardNumber = (number) => {\n    let regex = new RegExp(\"^[0-9]{16}$\");\n    if (!regex.test(number))\n        return false;\n\n    return luhnCheck(number);\n}\n\nconst luhnCheck = (val) => {\n    let sum = 0;\n    for (let i = 0; i < val.length; i++) {\n        let intVal = parseInt(val.substr(i, 1));\n        if (i % 2 === 0) {\n            intVal *= 2;\n            if (intVal > 9) {\n                intVal = 1 + (intVal % 10);\n            }\n        }\n        sum += intVal;\n    }\n    return (sum % 10) === 0;\n}\n\nconst initState = {\n    user: {\n        userName: \"\",\n            userGender: \"\",\n            userCreditCard: \"\",\n            withLoyaltyProgram: false,\n            userCoupon: \"\",\n            timeStamp: \"\"\n    },\n    errors: {\n        userName: \"\",\n            userGender: \"\",\n            userCreditCard: \"\",\n    },\n    validated: {\n        userName: false,\n            userGender: false,\n            userCreditCard: false,\n    },\n};\n\nclass Registration extends Component {\n    state = {...initState, showSuccessMessage: false};\n\n    inputTransitionDuration = 300;\n\n    inputDefaultStyle = {\n        transition: `all ${this.inputTransitionDuration}ms ease-in-out`\n    }\n\n    inputTransitionStyles = {\n        entering: { opacity: 0, height: 0, marginBottom: 0 },\n        entered:  { opacity: 1, height: 56, marginBottom: 32 },\n        exiting:  { opacity: 0, height: 0, marginBottom: 0 },\n        exited:   { opacity: 1, height: 56, marginBottom: 32 }\n    };\n\n    handleChange = (e) => {\n        const target = e.target;\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState((prevState) => ({\n            user: {...prevState.user, [name]: value}\n        }))};\n\n    validateField = (e) => {\n        const target = e.target;\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\n        const name = target.name;\n        if (!value.length) {\n            return this.setState((prevState) => ({\n                errors: {...prevState.errors, [name]: \"This field cannot be empty\"},\n                validated: {...prevState.validated, [name]: false}\n            }))\n        }\n\n        let isValid;\n        let errorMessage = \"\";\n\n        switch(name) {\n            case 'userName':\n                isValid = value.match(/^[A-Za-z ]*$/i);\n                errorMessage = \"The user name can only contain letters and spaces\";\n                break;\n\n            case 'userGender':\n                isValid = [\"Male\", \"Female\", \"Non-binary\"].includes(value);\n                errorMessage = `${value} it's not valid gender`;\n                break;\n\n            case 'userCreditCard':\n                isValid = validateCardNumber(value.replace(/\\s+/g, ''));\n                errorMessage = \"This card is not valid\";\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState((prevState) => ({\n            validated: {...prevState.validated, [name]: isValid},\n            errors: {...prevState.errors, [name]: errorMessage},\n        }))\n    }\n\n    clearError = (e) => {\n        const target = e.target;\n        const name = target.name;\n        this.setState((prevState) => ({\n            errors: {...prevState.errors, [name]: \"\"}\n        }))\n    }\n\n    handleSubmit = () => {\n        let isFormValid = true;\n\n        for (let name in this.state.validated) {\n            if (!this.state.validated[name]) {\n                isFormValid = false;\n                if (!this.state.errors[name].length) {\n                    this.setState((prevState) => ({\n                        errors: {...prevState.errors, [name]: \"This field cannot be empty\"}\n                    }))\n                }\n            }\n        }\n\n        if (isFormValid) {\n            this.setState(\n                (prevState) => ({\n                    user: {...prevState.user, timeStamp: new Date()}\n                }),\n                () => {\n                    this.props.addUser(this.state.user);\n                    this.setState((prevState) => ({...prevState, ...initState, showSuccessMessage: true}));\n                }\n            );\n        }\n    };\n\n    handleMessageClose = (event, reason) => {\n        console.log(reason);\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        this.setState({showSuccessMessage: false});\n    };\n\n    render() {\n        return (\n            <div className=\"Registration\">\n                <h1 className=\"Registration-Heading\">Registration</h1>\n                <form className=\"Registration-Form\">\n                    <TextField\n                        className=\"Registration-TextField\"\n                        name=\"userName\"\n                        value={this.state.user.userName}\n                        onFocus={this.clearError}\n                        onChange={this.handleChange}\n                        onBlur={this.validateField}\n                        label=\"User name\"\n                        variant=\"outlined\"\n                        error={!!this.state.errors.userName.length}\n                        helperText={this.state.errors.userName}\n                    />\n\n                    <FormControl\n                        className=\"Registration-TextField\"\n                        variant=\"outlined\"\n                        error={!!this.state.errors.userGender.length}\n                    >\n                        <InputLabel id=\"userGenderLabel\">Gender</InputLabel>\n\n                        <Select\n                            labelId=\"userGenderLabel\"\n                            id=\"userGender\"\n                            name=\"userGender\"\n                            value={this.state.user.userGender}\n                            onFocus={this.clearError}\n                            onChange={this.handleChange}\n                            onBlur={this.validateField}\n                            label=\"Gender\"\n                        >\n                            <MenuItem value={\"Male\"}>Male</MenuItem>\n                            <MenuItem value={\"Female\"}>Female</MenuItem>\n                            <MenuItem value={\"Non-binary\"}>Non-binary</MenuItem>\n                        </Select>\n                        <FormHelperText>{this.state.errors.userGender}</FormHelperText>\n                    </FormControl>\n\n                    <TextField\n                        className=\"Registration-TextField\"\n                        name=\"userCreditCard\"\n                        value={this.state.user.userCreditCard}\n                        onFocus={this.clearError}\n                        onChange={this.handleChange}\n                        onBlur={this.validateField}\n                        label=\"Credit Card\"\n                        variant=\"outlined\"\n                        InputProps={{\n                            inputComponent: CardInput\n                        }}\n                        helperText={this.state.errors.userCreditCard}\n                        error={!!this.state.errors.userCreditCard.length}\n                    />\n\n                    <FormControlLabel\n                        className=\"Registration-Switch\"\n                        control={\n                            <Switch\n                                checked={this.state.user.withLoyaltyProgram}\n                                onChange={this.handleChange}\n                                name=\"withLoyaltyProgram\"\n                            />}\n                        label=\"Loyalty Program\"\n                        labelPlacement=\"end\"\n                    />\n                    <Transition\n                        in={this.state.user.withLoyaltyProgram}\n                        timeout={this.inputTransitionDuration}\n                        mountOnEnter={true}\n                        unmountOnExit={true}\n                    >\n                        {state => (\n                            <TextField\n                                className=\"Registration-TextField\"\n                                name=\"userCoupon\"\n                                value={this.state.user.userCoupon}\n                                onChange={this.handleChange}\n                                label=\"Coupon\"\n                                variant=\"outlined\"\n                                style={{\n                                    ...this.inputDefaultStyle,\n                                    ...this.inputTransitionStyles[state]\n                                }}\n                            />\n                        )}\n                    </Transition>\n\n                    <Button\n                        className=\"Registration-Button\"\n                        onClick={this.handleSubmit}\n                        variant=\"contained\"\n                    >\n                        Create user\n                    </Button>\n                </form>\n\n                <Snackbar\n                    open={this.state.showSuccessMessage}\n                    onClose={this.handleMessageClose}\n                    message=\"I love snacks\"\n                >\n                    <Alert\n                        onClose={this.handleMessageClose}\n                        severity=\"success\"\n                        elevation={6}\n                        variant=\"filled\"\n                    >\n                        User created successfully!\n                    </Alert>\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default Registration;","import React from \"react\";\nimport CheckIcon from '@material-ui/icons/CheckRounded';\nimport {NavLink} from \"react-router-dom\";\n\nimport './ClientList.scss'\n\nconst dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    timezone: 'UTC',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric'\n};\n\nfunction ClientList({ users }) {\n    return (\n        <div className=\"ClientList\">\n            <h1 className=\"ClientList-Heading\">User list</h1>\n\n            {users && users.length ? (\n                <div className=\"ClientList-TableWrapper\">\n                    <table className=\"ClientList-Table\">\n                        <thead>\n                            <tr className=\"ClientList-TableRow ClientList-TableRow_HeaderRow\">\n                                <th className=\"ClientList-TableHeader\">User name</th>\n                                <th className=\"ClientList-TableHeader\">Gender</th>\n                                <th className=\"ClientList-TableHeader\">Date</th>\n                                <th className=\"ClientList-TableHeader\">Loyalty program</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {users.map(user =>\n                                <tr key={user.timeStamp.toString()} className=\"ClientList-TableRow\">\n                                    <td className=\"ClientList-TableData\">{user.userName}</td>\n                                    <td className=\"ClientList-TableData\">{user.userGender}</td>\n                                    <td className=\"ClientList-TableData\">{user.timeStamp.toLocaleString(\"en-US\", dateOptions)}</td>\n                                    <td className=\"ClientList-TableData\">\n                                        {user.withLoyaltyProgram\n                                            ? <CheckIcon className=\"ClientList-CheckIcon\"/>\n                                            : null\n                                        }\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            ) : (\n                <div className=\"ClientList-Empty\">\n                    <img src=\"/images/empty.png\" alt=\"\" className=\"ClientList-EmptyImage\"/>\n                    <p className=\"ClientList-EmptyMessage\">Oops, the user list is empty!</p>\n                    <NavLink to=\"/add-user\" className=\"ClientList-EmptyLink\">Click here to go to the registration page</NavLink>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ClientList;","import React from \"react\";\nimport './AboutMe.scss'\n\nfunction AboutMe() {\n    return (\n        <h1 className=\"AboutMe-Heading\">Will be soon...</h1>\n    );\n}\n\nexport default AboutMe;","import React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport Header from \"../Header/Header\";\nimport Registration from \"../Registration/Registration\"\nimport ClientList from \"../ClientList/ClientList\"\nimport AboutMe from \"../AboutMe/AboutMe\"\n\nimport './App.scss'\n\nclass App extends Component {\n    state = {\n        users: [],\n    }\n\n    addUser = (user) => {\n        this.setState((prevState) => {\n            return {\n                users: [...prevState.users, { ...user }],\n            };\n        });\n    };\n\n    render() {\n        return (\n            <Router>\n                <Header/>\n                <div className=\"App-ContentWrapper\">\n                    <Switch>\n                        <Route path=\"/add-user\">\n                            <Registration addUser={this.addUser}/>\n                        </Route>\n                        <Route path=\"/user-list\">\n                            <ClientList users={this.state.users}/>\n                        </Route>\n                        <Route path=\"/about-me\">\n                            <AboutMe />\n                        </Route>\n                        <Route path=\"/\">\n                            <Redirect to=\"/user-list\"/>\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './scss/main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}